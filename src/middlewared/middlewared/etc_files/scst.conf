<%
	import os

	from collections import defaultdict

	global_config = middleware.call_sync('iscsi.global.config')
	targets = middleware.call_sync('iscsi.target.query')
	extents = {d['id']: d for d in middleware.call_sync('iscsi.extent.query', [['enabled', '=', True]])}
	portals = {d['id']: d for d in middleware.call_sync('iscsi.portal.query')}
	associated_targets = defaultdict(list)
	for a_tgt in filter(lambda a: a['extent'] in extents, middleware.call_sync('iscsi.targetextent.query')):
		associated_targets[a_tgt['target']].append(a_tgt)

	# FIXME: SSD is not being reflected in the initiator, please look into it
%>\
HANDLER vdisk_fileio {
% for extent in extents.values():
	DEVICE ${extent['name']} {
		filename ${os.path.join('/dev', extent['disk'])}
		blocksize ${extent['blocksize']}
%	if extent['rpm'] != 'SSD':
		rotational ${extent['rpm']}
%	endif
		read_only ${'1' if extent['ro'] else '0'}
		usn ${extent['serial']}
		naa_id ${extent['naa']}
		prod_id "iSCSI Disk"
	}

% endfor
}

TARGET_DRIVER iscsi {
	enabled 1

% for target in targets:
	TARGET ${global_config['basename']}:${target['name']} {
%	for associated_target in associated_targets[target['id']]:
		LUN ${associated_target['lunid']} ${extents[associated_target['extent']]['name']}
%	endfor
%	for group in target['groups']:
<%
	addresses = []
	for addr in portals[group['portal']]['listen']:
		if addr['ip'] == '0.0.0.0':
			# SCST uses wildcard patterns
			# FIXME: Please investigate usage of ipv6 patterns
			# https://github.com/truenas/scst/blob/e945943861687d16ae0415207306f75a55bcfd2b/iscsi-scst/usr/target.c#L139-L138
			addresses = []
			break
		addresses.append({**addr, 'ip': f'[{addr["ip"]}]' if ':' in addr['ip'] else addr['ip']})
		# FIXME: SCST does not seem to respect port values for portals, please look for alternatives
		# Refer to above git link please for this fixme
%>\
		% for addr in addresses:
		allowed_portal ${addr['ip']}
		% endfor
%	endfor
%	if associated_targets:

		enabled 1
%	endif
	}
% endfor
}
